---
const navItems = [
  { name: "About", href: "/about" },
  { name: "portfolio", href: "/portfolio" },
  { name: "Blog", href: "/blog" },
  { name: "Contact", href: "/contact" },
];

const socialItems = [
  {
    icon: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
      <path d="M20.447 20.452h-3.554v-5.569c0-1.328-.027-3.037-1.852-3.037-1.853 0-2.136 1.445-2.136 2.939v5.667H9.351V9h3.414v1.561h.046c.477-.9 1.637-1.85 3.37-1.85 3.601 0 4.267 2.37 4.267 5.455v6.286zM5.337 7.433a2.062 2.062 0 01-2.063-2.065 2.064 2.064 0 112.063 2.065zm1.782 13.019H3.555V9h3.564v11.452zM22.225 0H1.771C.792 0 0 .774 0 1.729v20.542C0 23.227.792 24 1.771 24h20.451C23.2 24 24 23.227 24 22.271V1.729C24 .774 23.2 0 22.222 0h.003z"/>
    </svg>`,
    href: "https://www.linkedin.com/in/thaddeus-krugman-6b2b81225/",
  },
  {
    icon: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="3 3 18 18" fill="currentColor">
    <path d="M10.053,7.988l5.631,8.024h-1.497L8.566,7.988H10.053z M21,7v10 c0,2.209-1.791,4-4,4H7c-2.209,0-4-1.791-4-4V7c0-2.209,1.791-4,4-4h10C19.209,3,21,4.791,21,7z M17.538,17l-4.186-5.99L16.774,7 h-1.311l-2.704,3.16L10.552,7H6.702l3.941,5.633L6.906,17h1.333l3.001-3.516L13.698,17H17.538z"></path>
  </svg>`,
    href: "https://twitter.com/thadkrugman",
  },
  {
    icon: `<svg xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="currentColor">
      <path d="M12 0C5.374 0 0 5.373 0 12c0 5.302 3.438 9.8 8.207 11.387.599.111.793-.261.793-.577v-2.234c-3.338.726-4.033-1.416-4.033-1.416-.546-1.387-1.333-1.756-1.333-1.756-1.089-.745.083-.729.083-.729 1.205.084 1.839 1.237 1.839 1.237 1.07 1.834 2.807 1.304 3.492.997.107-.775.418-1.305.762-1.604-2.665-.305-5.467-1.334-5.467-5.931 0-1.311.469-2.381 1.236-3.221-.124-.303-.535-1.524.117-3.176 0 0 1.008-.322 3.301 1.23A11.509 11.509 0 0112 5.803c1.02.005 2.047.138 3.006.404 2.291-1.552 3.297-1.23 3.297-1.23.653 1.653.242 2.874.118 3.176.77.84 1.235 1.911 1.235 3.221 0 4.609-2.807 5.624-5.479 5.921.43.372.823 1.102.823 2.222v3.293c0 .319.192.694.801.576C20.566 21.797 24 17.3 24 12c0-6.627-5.373-12-12-12z"/>
    </svg>`,
    href: "https://github.com/thadkrugman",
  },
];
---

<div
  class="min-h-screen flex flex-col w-full items-center justify-center mx-auto"
>
  <div
    class="box rotate-right flex flex-col w-full max-w-5xl bg-base-100 xl:bg-neutral"
  >
    <div
      class="box rotate-left box-shadow inset-0 flex flex-col w-full px-6 sm:px-8 md:px-16 lg:px-32 py-32 max-w-5xl bg-base-100"
    >
      <h1 class="heading text-4xl font-bold text-secondary">THAD KRUGMAN</h1>
      <p class="paragraph pt-6 text-base-content sm:text-lg">
        As a full stack software engineer, I bring three years of expertise in
        crafting exceptional web and mobile applications. With a deep love for
        technology and programming, I find great satisfaction in exploring and
        leveraging the latest cutting-edge tools and frameworks in the
        TypeScript ecosystem. From React and React Native to emerging solutions
        like Solid, Svelte, and Bun, I embrace innovation to deliver powerful,
        efficient, and user-friendly experiences. Driven by curiosity, I'm also
        expanding my knowledge into the realm of low-level programming
        languages, such as Zig and Rust, to gain a comprehensive understanding
        of system-level development. If you're looking for a passionate
        collaborator who stays at the forefront of technology, let's join forces
        and create something truly remarkable together.
      </p>
      <nav class="nav mt-5 flex flex-row space-x-3">
        {
          navItems.map((item) => (
            <a
              href={item.href}
              class="btn btn-secondary font-bold text-base-100 rounded-none"
            >
              {item.name}
            </a>
          ))
        }
      </nav>
      <div class="socials mt-5 flex flex-row space-x-3">
        {
          socialItems.map((item) => (
            <a
              class="text-secondary bg-base-100 h-10 w-10 hover:opacity-80"
              href={item.href}
              target="_blank"
              rel="noopener noreferrer"
            >
              <Fragment set:html={item.icon} />
            </a>
          ))
        }
      </div>
    </div>
  </div>
</div>

<script>
  const observer = new IntersectionObserver((entries) => {
    entries.forEach((entry) => {
      if (entry.isIntersecting) {
        entry.target.classList.add("in-view");
      }
    });
  });

  const rotateLeftBox = document.querySelector(".rotate-left");
  const rotateRightBox = document.querySelector(".rotate-right");
  const heading = document.querySelector(".heading");
  const paragraph = document.querySelector(".paragraph");
  const nav = document.querySelector(".nav");
  const socials = document.querySelector(".socials");

  if (rotateLeftBox) {
    observer.observe(rotateLeftBox);
  }
  if (rotateRightBox) {
    observer.observe(rotateRightBox);
  }
  if (heading) {
    observer.observe(heading);
  }
  if (paragraph) {
    observer.observe(paragraph);
  }
  if (nav) {
    observer.observe(nav);
  }
  if (socials) {
    observer.observe(socials);
  }
</script>

<style>
  .heading,
  .paragraph,
  .nav,
  .socials {
    opacity: 1;
  }

  @media (max-width: 1279px) {
    .heading,
    .paragraph,
    .nav,
    .socials {
      opacity: 0;
      transition: opacity 1.5s;
    }

    .heading.in-view {
      opacity: 1;
    }

    .paragraph.in-view {
      opacity: 1;
      transition-delay: 0.3s;
    }

    .nav.in-view {
      opacity: 1;
      transition-delay: 0.6s;
    }

    .socials.in-view {
      opacity: 1;
      transition-delay: 0.9s;
    }
  }

  @media (min-width: 1280px) {
    .box {
      transition: transform 1s;
    }

    .box.box-shadow {
      box-shadow: 0 0 15px rgba(0, 0, 0, 0.25);
    }

    .box.rotate-left.in-view {
      animation: rotateLeft 1s forwards;
      animation-delay: 1s;
    }

    @keyframes rotateLeft {
      0% {
        transform: rotate(0deg);
      }
      100% {
        transform: rotate(-12deg);
      }
    }

    .box.rotate-right.in-view {
      @apply rotate-6;
    }
  }
</style>
